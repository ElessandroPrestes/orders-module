upstream php_app {
    server order_app1:9000;
    server order_app2:9000;
}

# Rate limiting deve ficar no contexto http (fora do server)
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;

server {
    listen 80;
    server_name localhost;

    root /var/www/public;
    index index.php index.html;

    # Segurança geral
    client_max_body_size 2M;

    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Define origem permitida para CORS
    if ($http_origin ~* (https?://localhost:9000|https?://order_nginx)) {
        set $cors_origin $http_origin;
    }

    # Rota dedicada para sanctum/csrf-cookie
    location = /sanctum/csrf-cookie {
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-XSRF-TOKEN' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-XSRF-TOKEN' always;

        try_files $uri /index.php?$query_string;
    }

    # Proteção e rate limiting para rotas REST
    location ~ ^/api/ {
        limit_req zone=api_limit burst=10 nodelay;

        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-XSRF-TOKEN' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-XSRF-TOKEN' always;

        try_files $uri $uri/ /index.php?$query_string;
    }

    # Roteamento padrão
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Execução de arquivos PHP
    location ~ \.php$ {
        # separa PATH_INFO corretamente
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi.conf;
        fastcgi_index index.php;
        fastcgi_pass php_app;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_read_timeout 300;
    }

    # Bloqueio de arquivos ocultos e diretórios sensíveis
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Proteção contra path traversal
    location ~* (\.\./|\.\.) {
        deny all;
    }

    # Documentação da API
    location /api/documentation {
        alias /var/www/storage/api-docs/;
        index index.html;
        try_files $uri $uri/ =404;
    }

    error_log  /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log combined;
}
